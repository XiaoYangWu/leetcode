/*
Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.
*/

/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int minDepth(TreeNode root) {
        int n=0;
        if(root==null)
            return 0;
        return recur(root,0);
    }
    public int recur(TreeNode root,int n){
        
        if(root.left!=null&&root.right!=null)
            return min(recur(root.left,n+1),recur(root.right,n+1));
        if(root.left!=null)
            return recur(root.left,n+1);
        if(root.right!=null)
            return recur(root.right,n+1);
        return n+1;
    }
    public int min(int a,int b){
        return a<b?a:b;
    }
}
