/*
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique 
triplets in the array which gives the sum of zero.

Note:

    Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)
    The solution set must not contain duplicate triplets.

    For example, given array S = {-1 0 1 2 -1 -4},

    A solution set is:
    (-1, 0, 1)
    (-1, -1, 2)
*/

public class Solution {
    public List<List<Integer>> threeSum(int[] num) {
        Arrays.sort(num);
        int n=num.length;
        List<List<Integer>> rs=new ArrayList<List<Integer>>();
        if(n<3)
           return rs;
        int start=0;
        while(start<n&&num[start]<0)
          start++;
        if(start==n)
           return rs;
         if(start==0){
             for(;start<n;start++)
                if(num[start]>0)
                    return rs;
            rs.add(Arrays.asList(0,0,0));
            return rs;
         }
         if(num[start]==0){
             if(start+2<n&&num[start+1]==0&&num[start+2]==0)
             rs.add(Arrays.asList(0,0,0));
         }
         int end=start-1;
         for(int i=0;i<=end;i++)
         {
             while(i<end&&num[i]==num[i+1])
                 i++;
             int sum=0-num[i];
             for(int j=start,k=n-1;j<k;){
                 if(num[j]+num[k]==sum){
                    List<Integer> tem=new ArrayList<Integer>();
                    tem.add(num[i]);
                    tem.add(num[j]);
                    tem.add(num[k]);
                    rs.add(tem);
                    do{
                        j++;
                    }while(j<k&&num[j]==num[j-1]);
                    do{
                        k--;
                    }while(j<k&&num[k]==num[k+1]);
                 }
                 else if(num[j]+num[k]<sum)
                   do{
                       j++;
                   }while(j<k&&num[j]==num[j-1]);
                 else
                   do{
                       k--;
                   }while(j<k&&num[k]==num[k+1]);
             }
         }
          for(int i=start;i<n;i++)
         {
             while(i+1<n&&num[i]==num[i+1])
                 i++;
             if(num[i]==0)
               continue;
             int sum=0-num[i];
             for(int j=0,k=end;j<k;){
                 if(num[j]+num[k]==sum){
                    List<Integer> tem=new ArrayList<Integer>();
                    tem.add(num[j]);
                    tem.add(num[k]);
                     tem.add(num[i]);
                    rs.add(tem);
                     do{
                       j++;
                   }while(j<k&&num[j]==num[j-1]);
                     do{
                       k--;
                   }while(j<k&&num[k]==num[k+1]);
                 }
                 else if(num[j]+num[k]<sum)
                    do{
                       j++;
                   }while(j<k&&num[j]==num[j-1]);
                 else
                    do{
                       k--;
                   }while(j<k&&num[k]==num[k+1]);
             }
         }
           
        return rs;
    }
}
