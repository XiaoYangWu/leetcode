/*
Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

You are given a target value to search. If found in the array return its index, otherwise return -1.

You may assume no duplicate exists in the array.

*/

public class Solution {
    public int search(int[] A, int target) {
         int n=A.length;
	     int index=-1;
	     if(A[0]<A[n-1])
	    	 index=0;
	     else{
	    	 for(int i=1;i<n;i++)
	    		 if(A[i]<A[i-1]){
	    			 index=i;
	    			 break;
	    		 }
	     }
		 return recur(A,0,n-1,target,index);  
    }
    private static int recur(int[] A, int start, int end, int target, int index) {
		// TODO Auto-generated method stub
		if(start>end)
			return -1;
		int n=A.length;
		int mid=(start+end)/2;
		int mmid=covert(mid,index,n);
	    if(A[mmid]==target)
	    	return mmid;
	    if(A[mmid]<target)
	    	return recur(A,mid+1,end,target,index);
	    else
	    	return recur(A,start,mid-1,target,index);
		
	}
	private static int covert(int target, int index, int n) {
		// TODO Auto-generated method stub
		return (target+index)%n;
	}
}
