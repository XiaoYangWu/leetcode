/*
Given a linked list, remove the nth node from the end of list and return its head.

For example,

   Given linked list: 1->2->3->4->5, and n = 2.

   After removing the second node from the end, the linked list becomes 1->2->3->5.

Note:
Given n will always be valid.
Try to do this in one pass. 

*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode temHead=new ListNode(0);
        temHead.next=head;
        ListNode p1=head,p2=head,p3=temHead;
        while(--n>=1)
             p2=p2.next;
        while(p2.next!=null){
            p2=p2.next;
            p1=p1.next;
            p3=p3.next;
        }
        p3.next=p1.next;
        return temHead.next;
    }
}
