/*
Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

*/

public class Solution {
    public int threeSumClosest(int[] num, int target) {
        Arrays.sort(num);
        int n=num.length;
        int min=Integer.MAX_VALUE;
        int rs=0;
        for(int i=0;i<n;i++){
            for(int j=0,k=n-1;j<k;){
                if(j==i)
                    j++;
                else if(k==i)
                    k--;
                else{
                    int sum=num[i];
                    sum+=(num[j]+num[k]);
                    if(sum==target)
                        return target;
                    else if(sum<target){
                        int gap=target-sum;
                        rs=gap<min?sum:rs;
                        min=gap<min?gap:min;
                        j++;
                    }
                    else{
                        int gap=sum-target;
                        rs=gap<min?sum:rs;
                        min=gap<min?gap:min;
                        k--;
                    }
                }
            }
        }
        return rs;
        
        
    }
}
