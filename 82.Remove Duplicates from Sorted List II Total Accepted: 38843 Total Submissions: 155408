/*
 Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

For example,
Given 1->2->3->3->4->4->5, return 1->2->5.
Given 1->1->1->2->3, return 2->3. 
*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head==null)
           return head;
        ListNode myHead=new ListNode(0);
        myHead.next=head;
        ListNode before=myHead;
        ListNode now=head;
        ListNode after=head.next;
        while(now!=null){
            while(after!=null&&after.val==now.val)
               after=after.next;
            if(now.next!=after)
            {
                before.next=after;
                now=after;
                if(now!=null)
                   after=now.next;
            }
            else{
                before=now;
                now=after;
                if(now!=null)
                   after=now.next;
            }
        }
        return myHead.next;
    }
}
