/*
 Divide two integers without using multiplication, division and mod operator.

If it is overflow, return MAX_INT. 

*/

public class Solution {
    public int divide(int dividend, int divisor) {
    //    if(divisor==0)
      //     return Integer.MAX_VALUE;
        if(divisor==1||dividend==0)
           return dividend;
        if(divisor==-1&&dividend!=Integer.MIN_VALUE)
           return -dividend;
        long rs=recur(dividend,divisor);
        return rs>Integer.MAX_VALUE?Integer.MAX_VALUE:(int)rs;
        
    }
    public long recur(long a,long b){
         boolean flag=(a<0)!=(b<0);
         a=a<0?-a:a;
         b=b<0?-b:b;
        if(a<b)
          return 0;
        long time=1;
        long sum=b;
        while((sum+sum)<=a){
            sum+=sum;
            time+=time;
        }
        return flag?-(time+recur(a-sum,b)):time+recur(a-sum,b);
    }
}
