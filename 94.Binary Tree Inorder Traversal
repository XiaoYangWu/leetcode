/*
Given a binary tree, return the inorder traversal of its nodes' values.

For example:
Given binary tree {1,#,2,3},

   1
    \
     2
    /
   3

return [1,3,2].

Note: Recursive solution is trivial, could you do it iteratively?
*/

/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
   private void inOrder(TreeNode root, List<Integer> ls) {
		// TODO Auto-generated method stub
		   if(root==null)
			   return;
		  
		   inOrder(root.left,ls);
		    ls.add(root.val);
		   inOrder(root.right,ls);
	}
   
   
   
    public List<Integer> inorderTraversal(TreeNode root) {
         List<Integer> ls=new LinkedList<Integer>();
		  inOrder(root,ls);	
			 
		  
		  
		  return ls;
    }
}
