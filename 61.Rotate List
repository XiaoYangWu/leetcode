/*
Given a list, rotate the list to the right by k places, where k is non-negative.

For example:
Given 1->2->3->4->5->NULL and k = 2,
return 4->5->1->2->3->NULL.
*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode rotateRight(ListNode head, int n) {
        if(head==null||head.next==null)
           return head;
        ListNode tail=head;
        int count=1;
        while(tail.next!=null){
            count++;
            tail=tail.next;
        }
        n%=count;
        if(n==0)
           return head;
        tail.next=head;
        tail=head;
        count-=n;
        for(int i=1;i<count;i++){
            tail=tail.next;
        }
        head=tail.next;
        tail.next=null;
        return head;
    }
}
