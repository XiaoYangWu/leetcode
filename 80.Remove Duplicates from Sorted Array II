/*
 Follow up for "Remove Duplicates":
What if duplicates are allowed at most twice?

For example,
Given sorted array A = [1,1,1,2,2,3],

Your function should return length = 5, and A is now [1,1,2,2,3]. 
*/

public class Solution {
    public int removeDuplicates(int[] A) {
        int n=A.length;
        if(n<3)
           return n;
        int before=-1;
        int now=0;
        int after=1;
        while(now!=n){
            while(after!=n&&A[after]==A[now])
               after++;
            int count=after-now;
            if(count==1)
            {
                A[++before]=A[now];
            }
            else{
                A[++before]=A[now];
                A[++before]=A[now];
            }
            now=after;
            after=now+1;
        }
         return before+1; 
    }
}
