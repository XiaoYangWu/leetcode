You are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and
each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
 
 
 public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int flag=0;
        ListNode head=new ListNode(0);
        ListNode cur=head;
        int tem=0;
        while(l1!=null||l2!=null)
        {
            tem+=flag;
            if(l1!=null)
               tem+=l1.val;
            if(l2!=null)
               tem+=l2.val;
            cur.next=new ListNode(tem%10);
            flag=tem/10;
            tem=0;
            if(l1!=null)
               l1=l1.next;
            if(l2!=null)
               l2=l2.next;   
            cur=cur.next;
        }
        if(flag==1)
           cur.next=new ListNode(1);
        return head.next;
    }
}
