/*
Given an array where elements are sorted in ascending order, convert it to a height balanced BST.
*/

/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode sortedArrayToBST(int[] num) {
          int n=num.length;
	        if(n==0)
	        	return null;
	        TreeNode root=new TreeNode(0);
	        covert(num,0,n-1,root);
	        return root;
    }
    	private void covert(int[] num, int start, int end, TreeNode root) {
	// TODO Auto-generated method stub
	int mid=(start+end)/2;
	root.val=num[mid];
	if(start<=(mid-1)){
		root.left=new TreeNode(0);
		covert(num,start,mid-1,root.left);
	}
	if(end>=(mid+1)){
        root.right=new TreeNode(0);   	
		covert(num,mid+1,end,root.right);
	}
}
}
