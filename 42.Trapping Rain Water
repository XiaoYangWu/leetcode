/*
 Given n non-negative integers representing an elevation map where the width of each bar is 1, 
 compute how much water it is able to trap after raining.

For example,
Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.


The above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case,
6 units of rain water (blue section) are being trapped. Thanks Marcos for contributing this image!
*/

public class Solution {
    public int trap(int[] A) {
        int n=A.length;
        int start=0;
        int end=A.length-1;
        int sum=0;
        
        for(;start<end;start++){
            if(A[start]!=0)
                break;
        }
        for(;start<end;end--){
            if(A[end]!=0)
                break;
        }
         while(start<end){
             if(A[start]<A[end]){
                 int i=start+1;
                 for(;i<end&&A[i]<A[start];i++){
                     sum+=(A[start]-A[i]);
                 }
                 start=i;
             }
             else{
                 int j=end-1;
                 for(;j>start&&A[j]<A[end];j--)
                     sum+=(A[end]-A[j]);
                  end=j;
             }
         }
         return sum;
    }
}
