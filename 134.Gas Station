/*
 There are N gas stations along a circular route, where the amount of gas at station i is gas[i].

You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations.

Return the starting gas station's index if you can travel around the circuit once, otherwise return -1. 
*/

public class Solution {
    public int canCompleteCircuit(int[] gas, int[] cost) {
        int n=gas.length;
        for(int i=0;i<n;i++)
           gas[i]-=cost[i];
        int sum=0;
        int start=0;
        for(;start<n&&gas[start]<0;start++);
        if(start>=n)
           return -1;
        sum+=gas[start];
        for(int i=(start+1)%n;i!=start&&start<n;i=(i+1)%n){
            sum+=gas[i];
            if(sum<0){
                int newStart=(i+1)%n;
                if(newStart<=start)
                    return -1;
                start=newStart;
                for(;start<n&&gas[start]<0;start++);
                if(start>=n)
                   return -1;
                i=start;
                sum=gas[start];
            }
        }
        return start;
    }
}
