/*
Given n, how many structurally unique BST's (binary search trees) that store values 1...n?

For example,
Given n = 3, there are a total of 5 unique BST's.

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3
*/

public class Solution {
    public int numTrees(int n) {
        int[][] cache=new int[n+1][n+1];
        return dp(1,n,cache);
    }
    public int dp(int start,int end,int[][] cache){
        if(end<start)
           return 1;
        if(cache[start][end]!=0)
           return cache[start][end];
        int rs=0;
        for(int i=start;i<=end;i++){
            rs+=(dp(start,i-1,cache)*dp(i+1,end,cache));
        }
        cache[start][end]=rs;
        return rs;
    }
}
