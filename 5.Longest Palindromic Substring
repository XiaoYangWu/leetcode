/*
Given a string S, find the longest palindromic substring in S. 
You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.

*/


public class Solution {
    public String longestPalindrome(String s) {
        int n=s.length();
        boolean[][] flag=new boolean[n+1][n+1];
        int max=-1;
        int start=-1;
        int end=-1;
        for(int i=n-1;i>=0;i--)
           for(int j=i;j<n;j++){
               if(s.charAt(i)==s.charAt(j)){
                   if(i==j||j==i+1||flag[i+1][j-1])
                    {
                        flag[i][j]=true;
                        if((j-i)>max){
                            max=j-i;
                            start=i;
                            end=j;
                        }
                    }
               }
           }
         return s.substring(start,end+1);
        
        
    }
}
